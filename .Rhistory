library(rvest)
library(dplyr)
library(stringr)
library(ggplot2)
presurl <- "https://sofifa.com/?showCol%5B0%5D=ae&showCol%5B1%5D=oa&showCol%5B2%5D=pt&showCol%5B3%5D=vl&showCol%5B4%5D=wg&showCol%5B5%5D=tt&showCol%5B6%5D=pi&showCol%5B7%5D=hi&showCol%5B8%5D=wi&showCol%5B9%5D=pf&showCol%5B10%5D=bo&showCol%5B11%5D=bp&showCol%5B12%5D=gu&showCol%5B13%5D=jt&showCol%5B14%5D=le&showCol%5B15%5D=rc&showCol%5B16%5D=ta&showCol%5B17%5D=cr&showCol%5B18%5D=fi&showCol%5B19%5D=he&showCol%5B20%5D=sh&showCol%5B21%5D=vo&showCol%5B22%5D=ts&showCol%5B23%5D=dr&showCol%5B24%5D=cu&showCol%5B25%5D=fr&showCol%5B26%5D=lo&showCol%5B27%5D=bl&showCol%5B28%5D=to&showCol%5B29%5D=ac&showCol%5B30%5D=sp&showCol%5B31%5D=ag&showCol%5B32%5D=re&showCol%5B33%5D=ba&showCol%5B34%5D=tp&showCol%5B35%5D=so&showCol%5B36%5D=ju&showCol%5B37%5D=st&showCol%5B38%5D=sr&showCol%5B39%5D=ln&showCol%5B40%5D=te&showCol%5B41%5D=ar&showCol%5B42%5D=in&showCol%5B43%5D=po&showCol%5B44%5D=vi&showCol%5B45%5D=pe&showCol%5B46%5D=cm&showCol%5B47%5D=td&showCol%5B48%5D=ma&showCol%5B49%5D=sa&showCol%5B50%5D=sl&showCol%5B51%5D=tg&showCol%5B52%5D=gd&showCol%5B53%5D=gh&showCol%5B54%5D=gc&showCol%5B55%5D=gp&showCol%5B56%5D=gr&showCol%5B57%5D=bs&showCol%5B58%5D=wk&showCol%5B59%5D=sk&showCol%5B60%5D=aw&showCol%5B61%5D=dw&showCol%5B62%5D=ir&showCol%5B63%5D=bt&showCol%5B64%5D=pac&showCol%5B65%5D=sho&showCol%5B66%5D=pas&showCol%5B67%5D=dri&showCol%5B68%5D=def&showCol%5B69%5D=phy&r=190075&set=true&offset=0"
tablexpath <- '//*[@id="body"]/div[1]/div/div[2]/div/table'
prestable <- presurl %>%
read_html() %>%
html_element(xpath = tablexpath) %>%
html_table()
x <- 60
while (x < 5641) {
print(x)
x_string <- as.character(x)
new_url <- str_replace(presurl, str_sub(presurl, 1370, -1), paste("t=", x_string))
updated_tables <- new_url %>%
read_html() %>%
html_element(xpath = tablexpath) %>%
html_table()
prestable <- unique(rbind(prestable, updated_tables))
x <- x + 60
}
write.csv(prestable, file = 'sofifadata.csv', row.names = FALSE)
library(rvest)
library(tidyverse)
library(stringr)
library(stringdist)
#Scraping league data from transfermarkt.com
# Define URLs and league names
urls <- c(
"https://www.transfermarkt.com/premier-league/tabelle/wettbewerb/GB1?saison_id=2018",
"https://www.transfermarkt.com/serie-a/tabelle/wettbewerb/IT1?saison_id=2018",
"https://www.transfermarkt.com/laliga/tabelle/wettbewerb/ES1?saison_id=2018",
"https://www.transfermarkt.com/bundesliga/tabelle/wettbewerb/L1?saison_id=2018",
"https://www.transfermarkt.us/liga-nos/tabelle/wettbewerb/PO1/saison_id/2018",
"https://www.transfermarkt.us/eredivisie/tabelle/wettbewerb/NL1/saison_id/2018",
"https://www.transfermarkt.us/super-lig/tabelle/wettbewerb/TR1?saison_id=2018",
"https://www.transfermarkt.us/professional-football-league/jahrestabelle/wettbewerb/AR1N/saison_id/2018",
"https://www.transfermarkt.us/campeonato-brasileiro-serie-a/tabelle/wettbewerb/BRA1/saison_id/2017"
)
leagues <- c("Premier League", "Serie A", "LaLiga", "Bundesliga","LigaNOS","Eredivisie","SuperLig","ProfessionalFootballLeague","CampeonatoBrasileiroSerieA")
# Initialize an empty data frame to store the scraped data
all_data <- data.frame()
View(all_data)
# Loop over the URLs and scrape data
for (i in seq_along(urls)) {
url <- urls[i]
league_name <- leagues[i]
tablexpath <- '//*[@id="yw1"]/table'
# Try to scrape the table, and skip the iteration if it's not found
league_data <- try(url %>%
read_html() %>%
html_element(xpath = tablexpath) %>%
html_table(), silent = TRUE)
if (inherits(league_data, "try-error")) {
next
}
colnames(league_data) <- c("Pos", "img", "Club", "GP", "W", "D", "L", "GR", "GD", "Points")
league_data$img <- NULL
league_data <- mutate(league_data, league = league_name)
# Append the scraped data to the all_data data frame
all_data <- all_data %>%
bind_rows(league_data)
}
#Adding data from the Argentinian league manually from transfermarkt.com
url_arg<-"https://www.transfermarkt.us/professional-football-league/jahrestabelle/wettbewerb/AR1N/saison_id/2018"
tablexpath_arg <- '//*[@id="main"]/main/div[2]/div[1]/div/table'
league_data_arg <- try(url_arg %>%
read_html() %>%
html_element(xpath = tablexpath_arg) %>%
html_table(), silent = TRUE)
league_data_arg$Club<-NULL
colnames(league_data_arg) <- c("Pos", "Club", "GP", "W", "D", "L", "GR", "GD", "Points")
all_data <- rbind(all_data, league_data_arg%>%mutate(league="ProfessionalFootballLeague"))
all_data$Club <- gsub(" FC", "", all_data$Club, ignore.case = TRUE)
all_data$League<-all_data$league
all_data$league<-NULL
View(all_data)
# Scraping Club's transfer market data from transfermarkt.com
league_links <- c(
"https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1/plus/?saison_id=2018",
"https://www.transfermarkt.com/serie-a/startseite/wettbewerb/IT1/plus/?saison_id=2018",
"https://www.transfermarkt.com/laliga/startseite/wettbewerb/ES1/plus/?saison_id=2018",
"https://www.transfermarkt.com/bundesliga/startseite/wettbewerb/L1/plus/?saison_id=2018",
"https://www.transfermarkt.us/liga-portugal/startseite/wettbewerb/PO1/plus/saison_id2018?saison_id=2018",
"https://www.transfermarkt.us/eredivisie/startseite/wettbewerb/NL1/plus/?saison_id=2018",
"https://www.transfermarkt.us/super-lig/startseite/wettbewerb/TR1/plus/?saison_id=2018",
"https://www.transfermarkt.us/professional-football-league/startseite/wettbewerb/AR1N/plus/?saison_id=2018",
"https://www.transfermarkt.us/campeonato-brasileiro-serie-a/startseite/wettbewerb/BRA1/plus/?saison_id=2017"
)
# create a vector of league names
league_names <- c(
"Premier League","Serie A","LaLiga","Bundesliga","LigaNOS","Eredivisie","SuperLig","ProfessionalFootballLeague","CampeonatoBrasileiroSerieA")
# create an empty dataframe to store the results
club_df <- data.frame()
# loop through the league links
for (i in seq_along(league_links)) {
# scrape the data for the current league
xpath2 <- '//*[@id="yw1"]/table'
p <- try(
league_links[i] %>% read_html() %>% html_element(xpath = xpath2) %>% html_table(),
silent = TRUE
)
p$Club <- NULL
colnames(p) <- c("Club", "Squad", "AVGage", "Foreigners", "AVGPlayerValue", "TotalPlayerValue")
p[7] <- NULL
p[5] <- NULL
p <- p[-1,]
# add a column for the current league name
p$League <- league_names[i]
# bind the results to the club_df dataframe
club_df <- rbind(club_df, p)
}
